{"version":3,"sources":["components/GoldCalculator.js","reportWebVitals.js","index.js"],"names":["GoldCalc","useState","goldrate","setGoldrate","wastage","setWastage","goldweight","setGoldweight","goldamount","setGoldamount","wastageamount","setWastageAmount","gstamount","setGstamount","totalamount","setTotalamount","wastageingram","setWastageingram","className","type","id","name","value","onChange","e","target","onClick","goldAmount","wastageAmount","GSTAmount","totalAmount","wastageinGram","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAGe,SAASA,IAEhB,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,qBAApC,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,mBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA0CR,mBAAS,GAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAAkCV,mBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAsCZ,mBAAS,GAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KACA,EAA0Cd,mBAAS,GAAnD,mBAAOe,EAAP,KAAsBC,EAAtB,KAgBI,OACI,sBAAKC,UAAU,MAAf,UACI,iDACA,iCACI,gCACI,8CACA,uBAAOC,KAAK,SAASC,GAAG,QAAQC,KAAK,QAAQC,MAAOpB,EAAUqB,SAAU,SAAAC,GAAC,OAAIrB,GAAaqB,EAAEC,OAAOH,aAEvG,gCACI,gDACA,uBAAOH,KAAK,SAASC,GAAG,UAAUC,KAAK,UAAUC,MAAOhB,EAAYiB,SAAU,SAAAC,GAAC,OAAIjB,GAAeiB,EAAEC,OAAOH,aAE/G,gCACI,iDACA,uBAAOH,KAAK,SAASC,GAAG,UAAUC,KAAK,UAAUC,MAAOlB,EAASmB,SAAU,SAAAC,GAAC,OAAInB,GAAYmB,EAAEC,OAAOH,gBAG7G,wBAAQJ,UAAU,SAASQ,QA/BvC,WACI,IAAMC,EAAazB,EAAWI,EACxBsB,EAAiBxB,EAAQ,IAAKuB,EAC9BE,EAAY,KAAMF,EAAaC,GAC/BE,EAAcH,EAAaC,EAAgBC,EAC3CE,EAAiB3B,EAAQ,IAAKE,EAEpCG,EAAckB,GACdd,EAAagB,GACbd,EAAee,GACfnB,EAAiBiB,GACjBX,EAAiBc,IAoBT,uBAEA,kCACI,+BACI,6CACA,yCAEJ,+BACI,kDACA,6BAAKvB,OAET,+BACI,qDAAwBJ,EAAxB,QACA,6BAAKM,OAET,+BACI,0CACA,6BAAKE,OAET,+BACI,uCACA,6BAAKE,UAGb,8BACI,oDAAuBE,UCtE/C,IAYegB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3C,EAAD,MAEF4C,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1cc29ff7.chunk.js","sourcesContent":["import React, { useState }   from 'react';\nimport './style.css';\n\nexport default function GoldCalc() {\n\n        const [goldrate, setGoldrate] = useState();\n        const [wastage, setWastage] = useState();\n        const [goldweight, setGoldweight] = useState();\n        const [goldamount, setGoldamount] = useState(0);\n        const [wastageamount, setWastageAmount] = useState(0);\n        const [gstamount, setGstamount] = useState(0);\n        const [totalamount, setTotalamount] = useState(0);\n        const [wastageingram, setWastageingram] = useState(0);\n\n        function getGoldAmount(){\n            const goldAmount = goldrate * goldweight;\n            const wastageAmount = (wastage/100)*goldAmount;\n            const GSTAmount = 0.03*(goldAmount + wastageAmount);\n            const totalAmount = goldAmount + wastageAmount + GSTAmount;\n            const wastageinGram = (wastage/100)*goldweight;\n\n            setGoldamount(goldAmount);\n            setGstamount(GSTAmount);\n            setTotalamount(totalAmount);\n            setWastageAmount(wastageAmount);\n            setWastageingram(wastageinGram);\n        }\n\n            return (\n                <div className=\"App\">\n                    <h2>Gold Calculator</h2>\n                    <form>\n                        <div>\n                            <label>Gold rate</label>\n                            <input type=\"number\" id=\"grate\" name=\"grate\" value={goldrate} onChange={e => setGoldrate(+e.target.value)}/>\n                        </div>\n                        <div>\n                            <label>Gold Weight</label>\n                            <input type=\"number\" id=\"gweight\" name=\"gweight\" value={goldweight} onChange={e => setGoldweight(+e.target.value)}/>\n                        </div>\n                        <div>\n                            <label>Wastage in %</label>\n                            <input type=\"number\" id=\"wastage\" name=\"wastage\" value={wastage} onChange={e => setWastage(+e.target.value)}/>\n                        </div>\n                    </form>\n                    <button className=\"button\" onClick={getGoldAmount}>Calculate</button>\n\n                    <table>\n                        <tr>\n                            <th>Description</th>\n                            <th>Rate</th>\n                        </tr>\n                        <tr>\n                            <td>Actual Gold Rate</td>\n                            <td>{goldamount}</td>\n                        </tr>\n                        <tr>\n                            <td>Wastage in amount ({wastage}%)</td>\n                            <td>{wastageamount}</td>\n                        </tr>\n                        <tr>\n                            <td>GST (3%)</td>\n                            <td>{gstamount}</td>\n                        </tr>\n                        <tr>\n                            <td>Total</td>\n                            <td>{totalamount}</td>\n                        </tr>\n                    </table>\n                    <div>\n                        <p>*Wastage in grams: {wastageingram}</p>\n                    </div>\n\n                </div>\n\n            );\n\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GoldCalc from './components/GoldCalculator'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GoldCalc />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}